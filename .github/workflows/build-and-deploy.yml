name: Deploy to Server

on:
  push:
    branches:
      - main  # Триггер на пуш в ветку main
  pull_request:
    branches: [ "main" ]

env:
  CR_ID: crp31fj9u7aj7h70jn5t
  IMAGE_TAG: cr.yandex/crp31fj9u7aj7h70jn5t/api

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Image
        run: docker build -f infrastructure/tests/Dockerfile -t tests .
      - name: Run Tests in Container
        run: docker run --rm tests


  build-and-push:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      # Шаг 1. Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: build and push auth service image
        run: |
          docker build -f infrastructure/auth/Dockerfile -t cr.yandex/$CR_ID/auth:${{ github.sha }} .
          docker push cr.yandex/$CR_ID/auth:${{ github.sha }}

      - name: Get IAM Token
        id: iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Apply migrations
        env:
          YDB_ACCESS_TOKEN: ${{ steps.iam-token.outputs.token }}
        run: |
          docker run --rm -e YDB_ACCESS_TOKEN=$YDB_ACCESS_TOKEN \
          -e DOCUMENT_API_ENDPOINT=${{ secrets.DOCUMENT_API_ENDPOINT }} \
          -e DOCUMENT_DATABASE_PATH=${{ secrets.DOCUMENT_DATABASE_PATH }} \
          cr.yandex/$CR_ID/auth:${{ github.sha }} alembic upgrade head

      - name: Deploy Serverless Container
        id: deploy-sls-container1
        uses: yc-actions/yc-sls-container-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          container-name: authorizer
          folder-id: ${{secrets.FOLDER_ID}}
          revision-service-account-id: ${{secrets.SERVICE_ACCOUNT_ID}}
          revision-cores: 1
          revision-memory: 128Mb
          revision-core-fraction: 100
          revision-concurrency: 8
          revision-image-url: cr.yandex/crp31fj9u7aj7h70jn5t/auth:${{ github.sha }}
          revision-execution-time_out: 100
          revision-env: | 
            DOCUMENT_DATABASE_URL=${{ secrets.DOCUMENT_DATABASE_URL }}
            DOCUMENT_API_ENDPOINT=${{ secrets.DOCUMENT_API_ENDPOINT }}
            IS_DEBUG=False

            
          


      - name: build docker image

        run: |
          docker build -f infrastructure/api/Dockerfile -t $IMAGE_TAG:${{ github.sha }}  .
          docker push $IMAGE_TAG:${{ github.sha }}


      - name: Deploy Serverless Container
        id: deploy-sls-container2
        uses: yc-actions/yc-sls-container-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          container-name: sls-2
          folder-id: ${{secrets.FOLDER_ID}}
          revision-service-account-id: ${{secrets.SERVICE_ACCOUNT_ID}}
          revision-cores: 1
          revision-memory: 128Mb
          revision-core-fraction: 100
          revision-concurrency: 8
          revision-image-url: cr.yandex/crp31fj9u7aj7h70jn5t/api:${{ github.sha }}
          revision-execution-time_out: 100


